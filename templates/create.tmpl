<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="/assets/bootstrap.min.css" rel="stylesheet">
    <title>{{ .title }}</title>
    <style>
        @view-transition {
            navigation: auto;
        }
        #Description {
            view-transition-name: description;
        }
        #Start {
            view-transition-name: when;
        }
        .container {
         	margin-top: 20px;
            max-width: 600px; /* Sets a maximum width for the container */
            margin-left: auto; /* Centers the container */
            margin-right: auto; /* Centers the container */
        }
        .form-group {
            margin-bottom: 15px;
        }
        .form-label {
            margin-bottom: 5px;
        }
    </style>
    <script type="text/javascript">
        (function(c,l,a,r,i,t,y){
            c[a]=c[a]||function(){(c[a].q=c[a].q||[]).push(arguments)};
            t=l.createElement(r);t.async=1;t.src="https://www.clarity.ms/tag/"+i;
            y=l.getElementsByTagName(r)[0];y.parentNode.insertBefore(t,y);
        })(window, document, "clarity", "script", "nl9q05t0mc");
    </script>	
</head>
<body>
    <div class="container">
        <h3>{{ .headerText }}</h2>
        <form action="/event" method="post">
            <div class="form-group">
                <textarea id="Description" name="Description" rows="6" class="form-control"></textarea>
            </div>
            <div class="form-group">
                <label for="Start" class="form-label">{{ .startTimeFormLabel }}</label>
                <!-- consider https://github.com/williamtroup/Calendar.js/ -->
                <input type="datetime-local" id="Start" name="Start" class="form-control">
				<input type="hidden" id="TimeZone" name="TimeZone" >
                <script type="text/javascript">
                    function toLocalISOString(date) {
                        const localDate = new Date(date - date.getTimezoneOffset() * 60000); //offset in milliseconds. Credit https://stackoverflow.com/questions/10830357/javascript-toisostring-ignores-timezone-offset

                        // Round up to next hour, removing minutes, seconds, and milliseconds
                        localDate.setMinutes(0, 0, 0);
                        localDate.setHours(localDate.getHours() + 1);
                        return localDate.toISOString().slice(0, -1);
                    }
                    window.addEventListener("load", () => {
                        document.getElementById("Start").value = toLocalISOString(new Date());
                    });
                </script>
            </div>
            <input type="submit" class="btn btn-success" value="{{ .submitLabel }}">
        </form>
    </div>
    <script src="/assets/bootstrap.bundle.min.js"></script>
	<script>
		const tz = Intl.DateTimeFormat().resolvedOptions().timeZone;
		document.getElementById('TimeZone').value = tz;
	</script>
</body>
</html>